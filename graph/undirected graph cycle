bool bfs(vector<vector<int>>& adj,vector<int>&v, int src){
        v[src] = 1;
        queue<pair<int,int>>q;
        q.push({src,-1});
        while(!q.empty()){
            int node = q.front().first;
            int parent = q.front().second;
            q.pop();
            for (int i=0; i<adj[node].size(); i++){
                if (parent == adj[node][i]) continue;
                if (v[adj[node][i]]) return true;
                v[adj[node][i]] = 1;
                q.push({adj[node][i],node});
            }
        }
        return false;
    }
    
    bool isCycle(vector<vector<int>>& adj) {
        vector<int>v(adj.size(),0);
        for (int i=0; i<adj.size(); i++){
            if (!v[i]){
             if (bfs(adj,v,i)) return true; 
            }    
        }
        return false;
    } 
