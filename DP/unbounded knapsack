int knapSack(vector<int>& val, vector<int>& wt, int capacity) {
       int n = val.size();
        vector<vector<int>>dp(n+1,vector<int>(capacity+1,0));
        for (int i=1; i<n+1; i++){
            for (int j=1; j<capacity+1; j++){
                //1st case is that including and excluding
                int w = wt[i-1];
                if (w<=j){
                    dp[i][j] = max(val[i-1]+dp[i][j-w],dp[i-1][j]);
                }
                //excluding only 
                else {
                    dp[i][j] = dp[i-1][j];
                }
            }
        }
        return dp[n][capacity];
    }
