string smallestWindow(string &s, string &t) {
        unordered_map<char , int>mp;
        for (char ch : t){
            mp[ch]++;
        }
        int size = t.size();
        int n = s.size();
        int i=0,j=0;
        int count = 0;//current window ke under kitne t stirng k character hai 
        int minWindow = INT_MAX;
        int startj = -1;
        unordered_map<char,int>tempcount;
        while(i<n){
            char ch = s[i];
            tempcount[ch]++;
            if (mp[ch]>0 && tempcount[ch]<=mp[ch]){
                count++;
            }
            while (count==size){
                int currsubstringsize = i-j+1;
                if (currsubstringsize<minWindow){
                    minWindow = currsubstringsize;
                    startj = j;
                }
                tempcount[s[j]]--;
                if (mp[s[j]]>0&&tempcount[s[j]]<mp[s[j]] ){
                    count--;
                }
                j++;
            }
            i++;
        }
        return startj==-1?"":s.substr(startj,minWindow);
    }
